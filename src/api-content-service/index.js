/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './models/Error';
import Field from './models/Field';
import FormBlueprint from './models/FormBlueprint';
import FormDTO from './models/FormDTO';
import FormFieldMapper from './models/FormFieldMapper';
import FormFieldMapperId from './models/FormFieldMapperId';
import FormInstance from './models/FormInstance';
import FormInstanceId from './models/FormInstanceId';
import Media from './models/Media';
import TaskBlueprint from './models/TaskBlueprint';
import TaskDTO from './models/TaskDTO';
import TaskInstance from './models/TaskInstance';
import TaskInstanceId from './models/TaskInstanceId';
import DefaultApi from './controllers/DefaultApi';


/**
* An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ProjectDayApi = require('api-content-service/index'); // See note below*.
* var xxxSvc = new ProjectDayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ProjectDayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['api-content-service/index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ProjectDayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ProjectDayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module api-content-service/index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:api-content-service/ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:api-content-service/models/Error}
     */
    Error,

    /**
     * The Field model constructor.
     * @property {module:api-content-service/models/Field}
     */
    Field,

    /**
     * The FormBlueprint model constructor.
     * @property {module:api-content-service/models/FormBlueprint}
     */
    FormBlueprint,

    /**
     * The FormDTO model constructor.
     * @property {module:api-content-service/models/FormDTO}
     */
    FormDTO,

    /**
     * The FormFieldMapper model constructor.
     * @property {module:api-content-service/models/FormFieldMapper}
     */
    FormFieldMapper,

    /**
     * The FormFieldMapperId model constructor.
     * @property {module:api-content-service/models/FormFieldMapperId}
     */
    FormFieldMapperId,

    /**
     * The FormInstance model constructor.
     * @property {module:api-content-service/models/FormInstance}
     */
    FormInstance,

    /**
     * The FormInstanceId model constructor.
     * @property {module:api-content-service/models/FormInstanceId}
     */
    FormInstanceId,

    /**
     * The Media model constructor.
     * @property {module:api-content-service/models/Media}
     */
    Media,

    /**
     * The TaskBlueprint model constructor.
     * @property {module:api-content-service/models/TaskBlueprint}
     */
    TaskBlueprint,

    /**
     * The TaskDTO model constructor.
     * @property {module:api-content-service/models/TaskDTO}
     */
    TaskDTO,

    /**
     * The TaskInstance model constructor.
     * @property {module:api-content-service/models/TaskInstance}
     */
    TaskInstance,

    /**
     * The TaskInstanceId model constructor.
     * @property {module:api-content-service/models/TaskInstanceId}
     */
    TaskInstanceId,

    /**
    * The DefaultApi service constructor.
    * @property {module:api-content-service/controllers/DefaultApi}
    */
    DefaultApi
};
