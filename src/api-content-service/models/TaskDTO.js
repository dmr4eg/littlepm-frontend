/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskBlueprint from './TaskBlueprint';
import TaskInstance from './TaskInstance';

/**
 * The TaskDTO model module.
 * @module api-content-service/models/TaskDTO
 * @version 1.0.0
 */
class TaskDTO {
    /**
     * Constructs a new <code>TaskDTO</code>.
     * @alias module:api-content-service/models/TaskDTO
     * @param blueprint {module:api-content-service/models/TaskBlueprint} 
     * @param progress {module:api-content-service/models/TaskInstance} 
     */
    constructor(blueprint, progress) { 
        
        TaskDTO.initialize(this, blueprint, progress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, blueprint, progress) { 
        obj['blueprint'] = blueprint;
        obj['progress'] = progress;
    }

    /**
     * Constructs a <code>TaskDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:api-content-service/models/TaskDTO} obj Optional instance to populate.
     * @return {module:api-content-service/models/TaskDTO} The populated <code>TaskDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskDTO();

            if (data.hasOwnProperty('blueprint')) {
                obj['blueprint'] = TaskBlueprint.constructFromObject(data['blueprint']);
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = TaskInstance.constructFromObject(data['progress']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaskDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `blueprint`
        if (data['blueprint']) { // data not null
          TaskBlueprint.validateJSON(data['blueprint']);
        }
        // validate the optional field `progress`
        if (data['progress']) { // data not null
          TaskInstance.validateJSON(data['progress']);
        }

        return true;
    }


}

TaskDTO.RequiredProperties = ["blueprint", "progress"];

/**
 * @member {module:api-content-service/models/TaskBlueprint} blueprint
 */
TaskDTO.prototype['blueprint'] = undefined;

/**
 * @member {module:api-content-service/models/TaskInstance} progress
 */
TaskDTO.prototype['progress'] = undefined;






export default TaskDTO;

