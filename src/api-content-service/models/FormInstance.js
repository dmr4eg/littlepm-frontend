/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FormInstanceId from './FormInstanceId';

/**
 * The FormInstance model module.
 * @module api-content-service/models/FormInstance
 * @version 1.0.0
 */
class FormInstance {
    /**
     * Constructs a new <code>FormInstance</code>.
     * Specific instance of a form for a user
     * @alias module:api-content-service/models/FormInstance
     * @param id {module:api-content-service/models/FormInstanceId} 
     * @param status {Boolean} True if form is completed, false otherwise
     */
    constructor(id, status) { 
        
        FormInstance.initialize(this, id, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, status) { 
        obj['id'] = id;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>FormInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:api-content-service/models/FormInstance} obj Optional instance to populate.
     * @return {module:api-content-service/models/FormInstance} The populated <code>FormInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FormInstance();

            if (data.hasOwnProperty('id')) {
                obj['id'] = FormInstanceId.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FormInstance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FormInstance</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FormInstance.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          FormInstanceId.validateJSON(data['id']);
        }

        return true;
    }


}

FormInstance.RequiredProperties = ["id", "status"];

/**
 * @member {module:api-content-service/models/FormInstanceId} id
 */
FormInstance.prototype['id'] = undefined;

/**
 * True if form is completed, false otherwise
 * @member {Boolean} status
 */
FormInstance.prototype['status'] = undefined;






export default FormInstance;

