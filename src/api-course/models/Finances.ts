/* tslint:disable */
/* eslint-disable */
/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FinancesId } from './FinancesId';
import {
    FinancesIdFromJSON,
    FinancesIdFromJSONTyped,
    FinancesIdToJSON,
    FinancesIdToJSONTyped,
} from './FinancesId';

/**
 * Entity for user finances on a specific project
 * @export
 * @interface Finances
 */
export interface Finances {
    /**
     * 
     * @type {FinancesId}
     * @memberof Finances
     */
    id: FinancesId;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    investorGave?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    investorReturn?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    spentBudget?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    toysPlanned?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    toysSold?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    toysLeft?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    membersBudget?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    profit?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    expenseAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    calculatedBudget?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    itemsCost?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    recommendedPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    pricePerItem?: number;
    /**
     * 
     * @type {number}
     * @memberof Finances
     */
    soldPrice?: number;
}

/**
 * Check if a given object implements the Finances interface.
 */
export function instanceOfFinances(value: object): value is Finances {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function FinancesFromJSON(json: any): Finances {
    return FinancesFromJSONTyped(json, false);
}

export function FinancesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Finances {
    if (json == null) {
        return json;
    }
    return {
        
        'id': FinancesIdFromJSON(json['id']),
        'investorGave': json['investor_gave'] == null ? undefined : json['investor_gave'],
        'investorReturn': json['investor_return'] == null ? undefined : json['investor_return'],
        'spentBudget': json['spent_budget'] == null ? undefined : json['spent_budget'],
        'toysPlanned': json['toys_planned'] == null ? undefined : json['toys_planned'],
        'toysSold': json['toys_sold'] == null ? undefined : json['toys_sold'],
        'toysLeft': json['toys_left'] == null ? undefined : json['toys_left'],
        'membersBudget': json['members_budget'] == null ? undefined : json['members_budget'],
        'profit': json['profit'] == null ? undefined : json['profit'],
        'expenseAmount': json['expense_amount'] == null ? undefined : json['expense_amount'],
        'calculatedBudget': json['calculated_budget'] == null ? undefined : json['calculated_budget'],
        'itemsCost': json['items_cost'] == null ? undefined : json['items_cost'],
        'recommendedPrice': json['recommended_price'] == null ? undefined : json['recommended_price'],
        'pricePerItem': json['price_per_item'] == null ? undefined : json['price_per_item'],
        'soldPrice': json['sold_price'] == null ? undefined : json['sold_price'],
    };
}

export function FinancesToJSON(json: any): Finances {
    return FinancesToJSONTyped(json, false);
}

export function FinancesToJSONTyped(value?: Finances | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': FinancesIdToJSON(value['id']),
        'investor_gave': value['investorGave'],
        'investor_return': value['investorReturn'],
        'spent_budget': value['spentBudget'],
        'toys_planned': value['toysPlanned'],
        'toys_sold': value['toysSold'],
        'toys_left': value['toysLeft'],
        'members_budget': value['membersBudget'],
        'profit': value['profit'],
        'expense_amount': value['expenseAmount'],
        'calculated_budget': value['calculatedBudget'],
        'items_cost': value['itemsCost'],
        'recommended_price': value['recommendedPrice'],
        'price_per_item': value['pricePerItem'],
        'sold_price': value['soldPrice'],
    };
}

