/* tslint:disable */
/* eslint-disable */
/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectBlueprint } from './ProjectBlueprint';
import {
    ProjectBlueprintFromJSON,
    ProjectBlueprintFromJSONTyped,
    ProjectBlueprintToJSON,
    ProjectBlueprintToJSONTyped,
} from './ProjectBlueprint';
import type { ProjectInstance } from './ProjectInstance';
import {
    ProjectInstanceFromJSON,
    ProjectInstanceFromJSONTyped,
    ProjectInstanceToJSON,
    ProjectInstanceToJSONTyped,
} from './ProjectInstance';

/**
 * 
 * @export
 * @interface ProjectDTO
 */
export interface ProjectDTO {
    /**
     * 
     * @type {ProjectBlueprint}
     * @memberof ProjectDTO
     */
    blueprint: ProjectBlueprint;
    /**
     * 
     * @type {ProjectInstance}
     * @memberof ProjectDTO
     */
    instance: ProjectInstance;
}

/**
 * Check if a given object implements the ProjectDTO interface.
 */
export function instanceOfProjectDTO(value: object): value is ProjectDTO {
    if (!('blueprint' in value) || value['blueprint'] === undefined) return false;
    if (!('instance' in value) || value['instance'] === undefined) return false;
    return true;
}

export function ProjectDTOFromJSON(json: any): ProjectDTO {
    return ProjectDTOFromJSONTyped(json, false);
}

export function ProjectDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'blueprint': ProjectBlueprintFromJSON(json['blueprint']),
        'instance': ProjectInstanceFromJSON(json['instance']),
    };
}

export function ProjectDTOToJSON(json: any): ProjectDTO {
    return ProjectDTOToJSONTyped(json, false);
}

export function ProjectDTOToJSONTyped(value?: ProjectDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'blueprint': ProjectBlueprintToJSON(value['blueprint']),
        'instance': ProjectInstanceToJSON(value['instance']),
    };
}

