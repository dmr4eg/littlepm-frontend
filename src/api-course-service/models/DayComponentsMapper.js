/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DayComponentsMapperId from './DayComponentsMapperId';

/**
 * The DayComponentsMapper model module.
 * @module api-course-service/models/DayComponentsMapper
 * @version 1.0.0
 */
class DayComponentsMapper {
    /**
     * Constructs a new <code>DayComponentsMapper</code>.
     * Mapping of components (tasks, forms, media) within a day
     * @alias module:api-course-service/models/DayComponentsMapper
     * @param id {module:api-course-service/models/DayComponentsMapperId} 
     * @param type {module:api-course-service/models/DayComponentsMapper.TypeEnum} 
     * @param sortOrder {Number} Order or position within a list
     */
    constructor(id, type, sortOrder) { 
        
        DayComponentsMapper.initialize(this, id, type, sortOrder);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, type, sortOrder) { 
        obj['id'] = id;
        obj['type'] = type;
        obj['sortOrder'] = sortOrder;
    }

    /**
     * Constructs a <code>DayComponentsMapper</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:api-course-service/models/DayComponentsMapper} obj Optional instance to populate.
     * @return {module:api-course-service/models/DayComponentsMapper} The populated <code>DayComponentsMapper</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DayComponentsMapper();

            if (data.hasOwnProperty('id')) {
                obj['id'] = DayComponentsMapperId.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DayComponentsMapper</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DayComponentsMapper</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DayComponentsMapper.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          DayComponentsMapperId.validateJSON(data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

DayComponentsMapper.RequiredProperties = ["id", "type", "sortOrder"];

/**
 * @member {module:api-course-service/models/DayComponentsMapperId} id
 */
DayComponentsMapper.prototype['id'] = undefined;

/**
 * @member {module:api-course-service/models/DayComponentsMapper.TypeEnum} type
 */
DayComponentsMapper.prototype['type'] = undefined;

/**
 * Order or position within a list
 * @member {Number} sortOrder
 */
DayComponentsMapper.prototype['sortOrder'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
DayComponentsMapper['TypeEnum'] = {

    /**
     * value: "TASK"
     * @const
     */
    "TASK": "TASK",

    /**
     * value: "FORM"
     * @const
     */
    "FORM": "FORM",

    /**
     * value: "MEDIA"
     * @const
     */
    "MEDIA": "MEDIA"
};



export default DayComponentsMapper;

