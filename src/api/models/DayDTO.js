/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DayBlueprint from './DayBlueprint';
import DayInstance from './DayInstance';

/**
 * The DayDTO model module.
 * @module openapi/models/DayDTO
 * @version 1.0.0
 */
class DayDTO {
    /**
     * Constructs a new <code>DayDTO</code>.
     * @alias module:openapi/models/DayDTO
     * @param blueprint {module:openapi/models/DayBlueprint} 
     * @param instance {module:openapi/models/DayInstance} 
     */
    constructor(blueprint, instance) { 
        
        DayDTO.initialize(this, blueprint, instance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, blueprint, instance) { 
        obj['blueprint'] = blueprint;
        obj['instance'] = instance;
    }

    /**
     * Constructs a <code>DayDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:openapi/models/DayDTO} obj Optional instance to populate.
     * @return {module:openapi/models/DayDTO} The populated <code>DayDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DayDTO();

            if (data.hasOwnProperty('blueprint')) {
                obj['blueprint'] = DayBlueprint.constructFromObject(data['blueprint']);
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = DayInstance.constructFromObject(data['instance']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DayDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DayDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DayDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `blueprint`
        if (data['blueprint']) { // data not null
          DayBlueprint.validateJSON(data['blueprint']);
        }
        // validate the optional field `instance`
        if (data['instance']) { // data not null
          DayInstance.validateJSON(data['instance']);
        }

        return true;
    }


}

DayDTO.RequiredProperties = ["blueprint", "instance"];

/**
 * @member {module:openapi/models/DayBlueprint} blueprint
 */
DayDTO.prototype['blueprint'] = undefined;

/**
 * @member {module:openapi/models/DayInstance} instance
 */
DayDTO.prototype['instance'] = undefined;






export default DayDTO;

