/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FinancesId from './FinancesId';

/**
 * The Finances model module.
 * @module openapi/models/Finances
 * @version 1.0.0
 */
class Finances {
    /**
     * Constructs a new <code>Finances</code>.
     * Entity for user finances on a specific project
     * @alias module:openapi/models/Finances
     * @param id {module:openapi/models/FinancesId} 
     */
    constructor(id) { 
        
        Finances.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>Finances</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:openapi/models/Finances} obj Optional instance to populate.
     * @return {module:openapi/models/Finances} The populated <code>Finances</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Finances();

            if (data.hasOwnProperty('id')) {
                obj['id'] = FinancesId.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('investor_gave')) {
                obj['investor_gave'] = ApiClient.convertToType(data['investor_gave'], 'Number');
            }
            if (data.hasOwnProperty('investor_return')) {
                obj['investor_return'] = ApiClient.convertToType(data['investor_return'], 'Number');
            }
            if (data.hasOwnProperty('spent_budget')) {
                obj['spent_budget'] = ApiClient.convertToType(data['spent_budget'], 'Number');
            }
            if (data.hasOwnProperty('toys_planned')) {
                obj['toys_planned'] = ApiClient.convertToType(data['toys_planned'], 'Number');
            }
            if (data.hasOwnProperty('toys_sold')) {
                obj['toys_sold'] = ApiClient.convertToType(data['toys_sold'], 'Number');
            }
            if (data.hasOwnProperty('toys_left')) {
                obj['toys_left'] = ApiClient.convertToType(data['toys_left'], 'Number');
            }
            if (data.hasOwnProperty('members_budget')) {
                obj['members_budget'] = ApiClient.convertToType(data['members_budget'], 'Number');
            }
            if (data.hasOwnProperty('profit')) {
                obj['profit'] = ApiClient.convertToType(data['profit'], 'Number');
            }
            if (data.hasOwnProperty('expense_amount')) {
                obj['expense_amount'] = ApiClient.convertToType(data['expense_amount'], 'Number');
            }
            if (data.hasOwnProperty('calculated_budget')) {
                obj['calculated_budget'] = ApiClient.convertToType(data['calculated_budget'], 'Number');
            }
            if (data.hasOwnProperty('items_cost')) {
                obj['items_cost'] = ApiClient.convertToType(data['items_cost'], 'Number');
            }
            if (data.hasOwnProperty('recommended_price')) {
                obj['recommended_price'] = ApiClient.convertToType(data['recommended_price'], 'Number');
            }
            if (data.hasOwnProperty('price_per_item')) {
                obj['price_per_item'] = ApiClient.convertToType(data['price_per_item'], 'Number');
            }
            if (data.hasOwnProperty('sold_price')) {
                obj['sold_price'] = ApiClient.convertToType(data['sold_price'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Finances</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Finances</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Finances.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          FinancesId.validateJSON(data['id']);
        }

        return true;
    }


}

Finances.RequiredProperties = ["id"];

/**
 * @member {module:openapi/models/FinancesId} id
 */
Finances.prototype['id'] = undefined;

/**
 * @member {Number} investor_gave
 */
Finances.prototype['investor_gave'] = undefined;

/**
 * @member {Number} investor_return
 */
Finances.prototype['investor_return'] = undefined;

/**
 * @member {Number} spent_budget
 */
Finances.prototype['spent_budget'] = undefined;

/**
 * @member {Number} toys_planned
 */
Finances.prototype['toys_planned'] = undefined;

/**
 * @member {Number} toys_sold
 */
Finances.prototype['toys_sold'] = undefined;

/**
 * @member {Number} toys_left
 */
Finances.prototype['toys_left'] = undefined;

/**
 * @member {Number} members_budget
 */
Finances.prototype['members_budget'] = undefined;

/**
 * @member {Number} profit
 */
Finances.prototype['profit'] = undefined;

/**
 * @member {Number} expense_amount
 */
Finances.prototype['expense_amount'] = undefined;

/**
 * @member {Number} calculated_budget
 */
Finances.prototype['calculated_budget'] = undefined;

/**
 * @member {Number} items_cost
 */
Finances.prototype['items_cost'] = undefined;

/**
 * @member {Number} recommended_price
 */
Finances.prototype['recommended_price'] = undefined;

/**
 * @member {Number} price_per_item
 */
Finances.prototype['price_per_item'] = undefined;

/**
 * @member {Number} sold_price
 */
Finances.prototype['sold_price'] = undefined;






export default Finances;

