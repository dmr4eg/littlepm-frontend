/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DayInstanceId model module.
 * @module openapi/models/DayInstanceId
 * @version 1.0.0
 */
class DayInstanceId {
    /**
     * Constructs a new <code>DayInstanceId</code>.
     * Composite ID for DayInstance
     * @alias module:openapi/models/DayInstanceId
     * @param dayBlueprintUuid {String} UUID for a Day Blueprint
     * @param userUuid {String} UUID for a User
     */
    constructor(dayBlueprintUuid, userUuid) { 
        
        DayInstanceId.initialize(this, dayBlueprintUuid, userUuid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dayBlueprintUuid, userUuid) { 
        obj['day_blueprint_uuid'] = dayBlueprintUuid;
        obj['user_uuid'] = userUuid;
    }

    /**
     * Constructs a <code>DayInstanceId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:openapi/models/DayInstanceId} obj Optional instance to populate.
     * @return {module:openapi/models/DayInstanceId} The populated <code>DayInstanceId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DayInstanceId();

            if (data.hasOwnProperty('day_blueprint_uuid')) {
                obj['day_blueprint_uuid'] = ApiClient.convertToType(data['day_blueprint_uuid'], 'String');
            }
            if (data.hasOwnProperty('user_uuid')) {
                obj['user_uuid'] = ApiClient.convertToType(data['user_uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DayInstanceId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DayInstanceId</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DayInstanceId.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['day_blueprint_uuid'] && !(typeof data['day_blueprint_uuid'] === 'string' || data['day_blueprint_uuid'] instanceof String)) {
            throw new Error("Expected the field `day_blueprint_uuid` to be a primitive type in the JSON string but got " + data['day_blueprint_uuid']);
        }
        // ensure the json data is a string
        if (data['user_uuid'] && !(typeof data['user_uuid'] === 'string' || data['user_uuid'] instanceof String)) {
            throw new Error("Expected the field `user_uuid` to be a primitive type in the JSON string but got " + data['user_uuid']);
        }

        return true;
    }


}

DayInstanceId.RequiredProperties = ["day_blueprint_uuid", "user_uuid"];

/**
 * UUID for a Day Blueprint
 * @member {String} day_blueprint_uuid
 */
DayInstanceId.prototype['day_blueprint_uuid'] = undefined;

/**
 * UUID for a User
 * @member {String} user_uuid
 */
DayInstanceId.prototype['user_uuid'] = undefined;






export default DayInstanceId;

