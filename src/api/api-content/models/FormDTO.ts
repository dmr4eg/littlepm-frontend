/* tslint:disable */
/* eslint-disable */
/**
 * Project & Day API
 * An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormBlueprint } from './FormBlueprint';
import {
    FormBlueprintFromJSON,
    FormBlueprintFromJSONTyped,
    FormBlueprintToJSON,
    FormBlueprintToJSONTyped,
} from './FormBlueprint';
import type { FormInstance } from './FormInstance';
import {
    FormInstanceFromJSON,
    FormInstanceFromJSONTyped,
    FormInstanceToJSON,
    FormInstanceToJSONTyped,
} from './FormInstance';

/**
 * 
 * @export
 * @interface FormDTO
 */
export interface FormDTO {
    /**
     * 
     * @type {FormBlueprint}
     * @memberof FormDTO
     */
    blueprint: FormBlueprint;
    /**
     * 
     * @type {FormInstance}
     * @memberof FormDTO
     */
    instance: FormInstance;
}

/**
 * Check if a given object implements the FormDTO interface.
 */
export function instanceOfFormDTO(value: object): value is FormDTO {
    if (!('blueprint' in value) || value['blueprint'] === undefined) return false;
    if (!('instance' in value) || value['instance'] === undefined) return false;
    return true;
}

export function FormDTOFromJSON(json: any): FormDTO {
    return FormDTOFromJSONTyped(json, false);
}

export function FormDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'blueprint': FormBlueprintFromJSON(json['blueprint']),
        'instance': FormInstanceFromJSON(json['instance']),
    };
}

export function FormDTOToJSON(json: any): FormDTO {
    return FormDTOToJSONTyped(json, false);
}

export function FormDTOToJSONTyped(value?: FormDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'blueprint': FormBlueprintToJSON(value['blueprint']),
        'instance': FormInstanceToJSON(value['instance']),
    };
}

